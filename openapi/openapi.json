{
  "openapi": "3.0.3",
  "info": {
    "title": "PagoPa Payment Options",
    "description": "PagoPa Payment Options service \n ### APP ERROR CODES ### \n\n\n <details><summary>Details</summary>\n **NAME** | **HTTP STATUS CODE** | **DESCRIPTION** \n- | - | - \n **ODP-001** | *Bad Request* | ODP-SINTASSI. Errore riportato in caso di errore di sintassi nel contenuto della richiesta verso ODP\n **ODP-002** | *Not Found* | ODP_PSP_SCONOSCIUTO. Errore riportato in caso non sia presente fra i dati ottenuti da config-cache un psp coincidente con l’id fornito in input\n **ODP-003** | *Bad Request* | ODP_PSP_DISABILITATO. Errore riportato in caso il psp coincidente con l’id fornito in input risulti disabilitato\n **ODP-004** | *Not Found* | ODP_INTERMEDIARIO_PSP_SCONOSCIUTO. Errore riportato in caso il broker psp coincidente con i dati forniti in input non sia presente nei dati ottenuti da config-cache\n **ODP-005** | *Bad Request* | ODP_INTERMEDIARIO_PSP_DISABILITATO. Errore riportato in caso il broker psp coincidente con l’id fornito in input risulti disabilitato\n **ODP-006** | *Unauthorized* | ODP_AUTENTICAZIONE. Errore di autenticazione rispetto ai dati forniti\n **ODP-007** | *Forbidden* | ODP_AUTORIZZAZIONE. Errore di autorizzazione rispetto ai dati forniti\n **ODP-008** | *Bad Request* | ODP_SEMANTICA. Errore fornito in caso della presenza di casi d’invalidità semantica nei dati del flusso di verifica\n **ODP-009** | *Not Found* | ODP_STAZIONE_INT_PA_SCONOSCIUTA. Errore forninca in caso di assenza associazione stazione e PA\n **ODP-0099** | *Bad Request* | ODP_STAZIONE_INT_PA_DISABILITATA. Errore riportato in caso la stazione coincidente con l’id fornito in input risulti disabilitato\n **ODP-010** | *Service Unavailable* | ODP_STAZIONE_INT_PA_IRRAGGIUNGIBILE. Errore fornito in caso d’irraggiungibilità della stazione\n **ODP-011** | *Bad Request* | ODP_STAZIONE_INT_PA_SERVIZIO_NON_ATTIVO. Errore fornito in caso di servizio non attivo\n **ODP-012** | *Internal Server Error* | ODP_STAZIONE_INT_PA_TIMEOUT. Errore fornito in caso di timeout della stazione\n **ODP-013** | *Internal Server Error* | ODP_ERRORE_EMESSO_DA_PAA. Errore fornito in caso di errori da PAA\n **ODP-014** | *Bad Request* | ODP_STAZIONE_INT_PA_ERRORE_RESPONSE. Errore fornito in caso di risposta KO dalla stazione\n **ODP-015** | *Bad Request* | ODP_PSP_NAV_NOT_NMU. Errore fornito nel caso in cui il nav non sia valido per il flusso OdP\n **ODP-016** | *Bad Request* | ODP_SYSTEM_ERROR Codice d’errore generico\n **ODP-017** | *Internal Server Error* | ODP_SYSTEM_ERROR. Codice d’errore generico\n **ODP-018** | *Bad Request* | ODP_INTERMEDIARIO_PA_DISABILITATO\n **ODP-019** | *Not Found* | ODP_INTERMEDIARIO_PA_SCONOSCIUTO\n **ODP-020** | *Bad Request* | ODP_DOMINIO_DISABILITATO\n **ODP-021** | *Not Found* | ODP_DOMINIO_SCONOSCIUTO \n\n </details> \n",
    "termsOfService": "https://www.pagopa.gov.it/",
    "version": "0.4.6"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Localhost base URL"
    },
    {
      "url": "https://{host}/payment-options/service/v1",
      "description": "Base URL",
      "variables": {
        "host": {
          "default": "api.dev.platform.pagopa.it",
          "enum": [
            "api.dev.platform.pagopa.it",
            "api.uat.platform.pagopa.it",
            "api.platform.pagopa.it"
          ]
        }
      }
    }
  ],
  "paths": {
    "/info": {
      "get": {
        "tags": [
          "Generic"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/payment-options/organizations/{fiscal-code}/notices/{notice-number}": {
      "get": {
        "tags": [
          "Payment Options Resource"
        ],
        "summary": "Get payment options",
        "description": "Retrieve the payment options related to the provided input",
        "operationId": "getPaymentOptions",
        "parameters": [
          {
            "name": "fiscal-code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notice-number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idPsp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Session-Id",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "$ref": "#/components/responses/ErrorResponse500"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse400"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse404"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOptionsResource"
                },
                "example": {
                  "paTaxCode": "77777777777",
                  "paFullName": "EC",
                  "paOfficeName": "EC",
                  "paymentOptions": [
                    {
                      "description": "Test PayOpt - unica opzione",
                      "numberOfInstallments": 1,
                      "amount": 120,
                      "dueDate": "2024-10-30T23:59:59",
                      "validFrom": "2024-09-30T23:59:59",
                      "status": "non pagato",
                      "status reason": "desc",
                      "allCCP": "false",
                      "installments": [
                        {
                          "nav": "311111111111111111",
                          "iuv": "311111111111111111",
                          "amount": 120,
                          "description": "Test Opt Inst - unica opzione",
                          "dueDate": "2024-10-30T23:59:59",
                          "validFrom": "2024-09-30T23:59:59",
                          "status": "non pagato",
                          "status reason": "desc"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessPattern": {
        "enum": [
          "ALWAYS_NULL",
          "CONSTANT",
          "DYNAMIC"
        ],
        "type": "string"
      },
      "AnnotatedMember": {
        "type": "object",
        "properties": {
          "annotated": {
            "type": "object"
          },
          "modifiers": {
            "format": "int32",
            "type": "integer"
          },
          "public": {
            "type": "boolean"
          },
          "static": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/JavaType"
          },
          "rawType": {
            "type": "object"
          },
          "declaringClass": {
            "type": "object"
          },
          "member": {
            "type": "object"
          },
          "fullName": {
            "type": "string"
          },
          "typeContext": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeResolutionContext"
              }
            ],
            "deprecated": true
          },
          "allAnnotations": {
            "$ref": "#/components/schemas/AnnotationMap"
          }
        }
      },
      "AnnotationIntrospector": {
        "type": "object"
      },
      "AnnotationMap": {
        "type": "object",
        "properties": {
          "_annotations": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "ApiConfigCacheClient": {
        "type": "object"
      },
      "AppInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          }
        }
      },
      "ArrayBuilders": {
        "type": "object",
        "properties": {
          "_booleanBuilder": {
            "$ref": "#/components/schemas/BooleanBuilder"
          },
          "_byteBuilder": {
            "$ref": "#/components/schemas/ByteBuilder"
          },
          "_shortBuilder": {
            "$ref": "#/components/schemas/ShortBuilder"
          },
          "_intBuilder": {
            "$ref": "#/components/schemas/IntBuilder"
          },
          "_longBuilder": {
            "$ref": "#/components/schemas/LongBuilder"
          },
          "_floatBuilder": {
            "$ref": "#/components/schemas/FloatBuilder"
          },
          "_doubleBuilder": {
            "$ref": "#/components/schemas/DoubleBuilder"
          },
          "booleanBuilder": {
            "$ref": "#/components/schemas/BooleanBuilder"
          },
          "byteBuilder": {
            "$ref": "#/components/schemas/ByteBuilder"
          },
          "shortBuilder": {
            "$ref": "#/components/schemas/ShortBuilder"
          },
          "intBuilder": {
            "$ref": "#/components/schemas/IntBuilder"
          },
          "longBuilder": {
            "$ref": "#/components/schemas/LongBuilder"
          },
          "floatBuilder": {
            "$ref": "#/components/schemas/FloatBuilder"
          },
          "doubleBuilder": {
            "$ref": "#/components/schemas/DoubleBuilder"
          }
        }
      },
      "As": {
        "enum": [
          "PROPERTY",
          "WRAPPER_OBJECT",
          "WRAPPER_ARRAY",
          "EXTERNAL_PROPERTY",
          "EXISTING_PROPERTY"
        ],
        "type": "string"
      },
      "AtomicReferenceReadOnlyClassToSerializerMap": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/ReadOnlyClassToSerializerMap"
          },
          "plain": {
            "$ref": "#/components/schemas/ReadOnlyClassToSerializerMap"
          },
          "opaque": {
            "$ref": "#/components/schemas/ReadOnlyClassToSerializerMap"
          },
          "acquire": {
            "$ref": "#/components/schemas/ReadOnlyClassToSerializerMap"
          },
          "release": {
            "$ref": "#/components/schemas/ReadOnlyClassToSerializerMap"
          }
        }
      },
      "Base64Variant": {
        "type": "object",
        "properties": {
          "_name": {
            "type": "string"
          },
          "_paddingChar": {
            "format": "byte",
            "type": "string"
          },
          "_maxLineLength": {
            "format": "int32",
            "type": "integer"
          },
          "_writePadding": {
            "type": "boolean"
          },
          "_paddingReadBehaviour": {
            "$ref": "#/components/schemas/PaddingReadBehaviour"
          },
          "name": {
            "type": "string"
          },
          "paddingChar": {
            "format": "byte",
            "type": "string"
          },
          "paddingByte": {
            "format": "byte",
            "type": "string"
          },
          "maxLineLength": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BaseSettings": {
        "type": "object",
        "properties": {
          "_typeFactory": {
            "$ref": "#/components/schemas/TypeFactory"
          },
          "_classIntrospector": {
            "$ref": "#/components/schemas/ClassIntrospector"
          },
          "_annotationIntrospector": {
            "$ref": "#/components/schemas/AnnotationIntrospector"
          },
          "_propertyNamingStrategy": {
            "$ref": "#/components/schemas/PropertyNamingStrategy"
          },
          "_accessorNaming": {
            "$ref": "#/components/schemas/Provider"
          },
          "_typeResolverBuilder": {
            "$ref": "#/components/schemas/TypeResolverBuilderObject"
          },
          "_typeValidator": {
            "$ref": "#/components/schemas/PolymorphicTypeValidator"
          },
          "_dateFormat": {
            "$ref": "#/components/schemas/DateFormat"
          },
          "_handlerInstantiator": {
            "$ref": "#/components/schemas/HandlerInstantiator"
          },
          "_locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "_timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "_defaultBase64": {
            "$ref": "#/components/schemas/Base64Variant"
          },
          "_cacheProvider": {
            "$ref": "#/components/schemas/CacheProvider"
          },
          "classIntrospector": {
            "$ref": "#/components/schemas/ClassIntrospector"
          },
          "annotationIntrospector": {
            "$ref": "#/components/schemas/AnnotationIntrospector"
          },
          "propertyNamingStrategy": {
            "$ref": "#/components/schemas/PropertyNamingStrategy"
          },
          "accessorNaming": {
            "$ref": "#/components/schemas/Provider"
          },
          "typeFactory": {
            "$ref": "#/components/schemas/TypeFactory"
          },
          "typeResolverBuilder": {
            "$ref": "#/components/schemas/TypeResolverBuilderObject"
          },
          "polymorphicTypeValidator": {
            "$ref": "#/components/schemas/PolymorphicTypeValidator"
          },
          "dateFormat": {
            "$ref": "#/components/schemas/DateFormat"
          },
          "handlerInstantiator": {
            "$ref": "#/components/schemas/HandlerInstantiator"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "base64Variant": {
            "$ref": "#/components/schemas/Base64Variant"
          },
          "cacheProvider": {
            "$ref": "#/components/schemas/CacheProvider"
          }
        }
      },
      "BooleanBuilder": {
        "type": "object",
        "properties": {
          "_freeBuffer": {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          },
          "_bufferHead": {
            "$ref": "#/components/schemas/Node[Z"
          },
          "_bufferTail": {
            "$ref": "#/components/schemas/Node[Z"
          },
          "_bufferedEntryCount": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BrokerCreditorInstitution": {
        "type": "object",
        "properties": {
          "broker_code": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "extended_fault_bean": {
            "type": "boolean"
          }
        }
      },
      "BrokerPsp": {
        "type": "object",
        "properties": {
          "broker_psp_code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "extended_fault_bean": {
            "type": "boolean"
          }
        }
      },
      "Bucket": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "next": {
            "$ref": "#/components/schemas/Bucket"
          },
          "_class": {
            "type": "object"
          },
          "_type": {
            "$ref": "#/components/schemas/JavaType"
          },
          "_isTyped": {
            "type": "boolean"
          }
        }
      },
      "ByteBuilder": {
        "type": "object",
        "properties": {
          "_freeBuffer": {
            "format": "binary",
            "type": "string",
            "items": {
              "format": "byte",
              "type": "string"
            }
          },
          "_bufferHead": {
            "$ref": "#/components/schemas/Node[B"
          },
          "_bufferTail": {
            "$ref": "#/components/schemas/Node[B"
          },
          "_bufferedEntryCount": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "CacheProvider": {
        "type": "object"
      },
      "Calendar": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "isSet": {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          },
          "time": {
            "format": "int64",
            "type": "integer"
          },
          "isTimeSet": {
            "type": "boolean"
          },
          "areFieldsSet": {
            "type": "boolean"
          },
          "lenient": {
            "type": "boolean"
          },
          "zone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "firstDayOfWeek": {
            "format": "int32",
            "type": "integer"
          },
          "minimalDaysInFirstWeek": {
            "format": "int32",
            "type": "integer"
          },
          "nextStamp": {
            "format": "int32",
            "type": "integer"
          },
          "serialVersionOnStream": {
            "format": "int32",
            "type": "integer"
          },
          "timeInMillis": {
            "format": "int64",
            "type": "integer"
          },
          "setStateFields": {
            "format": "int32",
            "type": "integer"
          },
          "fieldsComputed": {
            "format": "int32",
            "type": "integer"
          },
          "fieldsNormalized": {
            "format": "int32",
            "type": "integer"
          },
          "partiallyNormalized": {
            "type": "boolean"
          },
          "fullyNormalized": {
            "type": "boolean"
          },
          "calendarType": {
            "type": "string"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "zoneShared": {
            "type": "boolean"
          },
          "weekDateSupported": {
            "type": "boolean"
          },
          "weekYear": {
            "format": "int32",
            "type": "integer"
          },
          "weeksInWeekYear": {
            "format": "int32",
            "type": "integer"
          },
          "weekCountData": {
            "$ref": "#/components/schemas/Locale"
          }
        }
      },
      "CharacterEscapes": {
        "type": "object",
        "properties": {
          "escapeCodesForAscii": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "Chronology": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "calendarType": {
            "type": "string"
          }
        }
      },
      "ClassIntrospector": {
        "type": "object"
      },
      "CoercionAction": {
        "enum": [
          "Fail",
          "TryConvert",
          "AsNull",
          "AsEmpty"
        ],
        "type": "string"
      },
      "CoercionConfigs": {
        "type": "object",
        "properties": {
          "_defaultAction": {
            "$ref": "#/components/schemas/CoercionAction"
          },
          "_defaultCoercions": {
            "$ref": "#/components/schemas/MutableCoercionConfig"
          },
          "_perTypeCoercions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MutableCoercionConfig"
            }
          },
          "_perClassCoercions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MutableCoercionConfig"
            }
          }
        }
      },
      "CompositePrinterParser": {
        "type": "object",
        "properties": {
          "printerParsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateTimePrinterParser"
            }
          },
          "optional": {
            "type": "boolean"
          }
        }
      },
      "ConfigCacheData": {
        "type": "object",
        "properties": {
          "cacheVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "configDataV1": {
            "$ref": "#/components/schemas/ConfigDataV1"
          }
        }
      },
      "ConfigCacheService": {
        "type": "object",
        "properties": {
          "logger": {
            "$ref": "#/components/schemas/Logger"
          },
          "apiConfigCacheClient": {
            "$ref": "#/components/schemas/ApiConfigCacheClient"
          },
          "configCacheData": {
            "$ref": "#/components/schemas/ConfigCacheData"
          }
        }
      },
      "ConfigDataV1": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "creditorInstitutions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CreditorInstitution"
            }
          },
          "stations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Station"
            }
          },
          "creditorInstitutionBrokers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/BrokerCreditorInstitution"
            }
          },
          "creditorInstitutionStations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/StationCreditorInstitution"
            }
          },
          "psps": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PaymentServiceProvider"
            }
          },
          "pspBrokers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/BrokerPsp"
            }
          }
        }
      },
      "ConfigOverrides": {
        "type": "object",
        "properties": {
          "_overrides": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MutableConfigOverride"
            }
          },
          "_defaultInclusion": {
            "$ref": "#/components/schemas/Value"
          },
          "_defaultSetterInfo": {
            "$ref": "#/components/schemas/Value1"
          },
          "_visibilityChecker": {
            "$ref": "#/components/schemas/VisibilityCheckerObject"
          },
          "_defaultMergeable": {
            "type": "boolean"
          },
          "_defaultLeniency": {
            "type": "boolean"
          },
          "defaultInclusion": {
            "$ref": "#/components/schemas/Value"
          },
          "defaultSetterInfo": {
            "$ref": "#/components/schemas/Value1"
          },
          "defaultMergeable": {
            "type": "boolean"
          },
          "defaultLeniency": {
            "type": "boolean"
          },
          "defaultVisibility": {
            "$ref": "#/components/schemas/VisibilityCheckerObject"
          }
        }
      },
      "Connection": {
        "type": "object",
        "properties": {
          "protocol": {
            "$ref": "#/components/schemas/ProtocolEnum1"
          },
          "ip": {
            "type": "string"
          },
          "port": {
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "ConstructorDetector": {
        "type": "object",
        "properties": {
          "_singleArgMode": {
            "$ref": "#/components/schemas/SingleArgConstructor"
          },
          "_requireCtorAnnotation": {
            "type": "boolean"
          },
          "_allowJDKTypeCtors": {
            "type": "boolean"
          }
        }
      },
      "ContentReference": {
        "type": "object",
        "properties": {
          "_offset": {
            "format": "int32",
            "type": "integer"
          },
          "_length": {
            "format": "int32",
            "type": "integer"
          },
          "_isContentTextual": {
            "type": "boolean"
          },
          "_maxRawContentLength": {
            "format": "int32",
            "type": "integer"
          },
          "rawContent": {}
        }
      },
      "ContextAttributes": {
        "type": "object"
      },
      "CreditorInstitution": {
        "type": "object",
        "properties": {
          "creditor_institution_code": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "business_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/CreditorInstitutionAddress"
          },
          "psp_payment": {
            "type": "boolean"
          },
          "reporting_ftp": {
            "type": "boolean"
          },
          "reporting_zip": {
            "type": "boolean"
          }
        }
      },
      "CreditorInstitutionAddress": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zip_code": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "tax_domicile": {
            "type": "string"
          }
        }
      },
      "CreditorInstitutionRestClient": {
        "type": "object",
        "properties": {
          "logger": {
            "$ref": "#/components/schemas/Logger"
          },
          "objectMapper": {
            "$ref": "#/components/schemas/ObjectMapper"
          }
        }
      },
      "CreditorInstitutionService": {
        "type": "object",
        "properties": {
          "logger": {
            "$ref": "#/components/schemas/Logger"
          },
          "APIM_FORWARDER_ENDPOINT": {
            "type": "string"
          },
          "APIM_FORWARDER_PATH": {
            "type": "string",
            "nullable": true
          },
          "creditorInstitutionRestClient": {
            "$ref": "#/components/schemas/CreditorInstitutionRestClient"
          }
        }
      },
      "Currency": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "numericCodeAsString": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "DatatypeFeatures": {
        "type": "object",
        "properties": {
          "_enabledFor1": {
            "format": "int32",
            "type": "integer"
          },
          "_enabledFor2": {
            "format": "int32",
            "type": "integer"
          },
          "_explicitFor1": {
            "format": "int32",
            "type": "integer"
          },
          "_explicitFor2": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "DateFormat": {
        "type": "object",
        "properties": {
          "calendar": {
            "$ref": "#/components/schemas/Calendar"
          },
          "numberFormat": {
            "$ref": "#/components/schemas/NumberFormat"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "lenient": {
            "type": "boolean"
          }
        }
      },
      "DateTimeFormatter": {
        "type": "object",
        "properties": {
          "printerParser": {
            "$ref": "#/components/schemas/CompositePrinterParser"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "decimalStyle": {
            "$ref": "#/components/schemas/DecimalStyle"
          },
          "resolverStyle": {
            "$ref": "#/components/schemas/ResolverStyle"
          },
          "resolverFields": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemporalField"
            }
          },
          "chrono": {
            "$ref": "#/components/schemas/Chronology"
          },
          "zone": {
            "$ref": "#/components/schemas/ZoneId"
          },
          "chronology": {
            "$ref": "#/components/schemas/Chronology"
          }
        }
      },
      "DateTimePrinterParser": {
        "type": "object"
      },
      "DayOfWeek": {
        "enum": [
          "MONDAY",
          "TUESDAY",
          "WEDNESDAY",
          "THURSDAY",
          "FRIDAY",
          "SATURDAY",
          "SUNDAY"
        ],
        "type": "string"
      },
      "DecimalStyle": {
        "type": "object",
        "properties": {
          "zeroDigit": {
            "format": "byte",
            "type": "string"
          },
          "positiveSign": {
            "format": "byte",
            "type": "string"
          },
          "negativeSign": {
            "format": "byte",
            "type": "string"
          },
          "decimalSeparator": {
            "format": "byte",
            "type": "string"
          }
        }
      },
      "DefaultDeserializationContext": {
        "type": "object",
        "properties": {
          "_cache": {
            "$ref": "#/components/schemas/DeserializerCache"
          },
          "_factory": {
            "$ref": "#/components/schemas/DeserializerFactory"
          },
          "_config": {
            "$ref": "#/components/schemas/DeserializationConfig"
          },
          "_featureFlags": {
            "format": "int32",
            "type": "integer"
          },
          "_readCapabilities": {
            "$ref": "#/components/schemas/JacksonFeatureSetStreamReadCapability"
          },
          "_view": {
            "type": "object"
          },
          "_injectableValues": {
            "$ref": "#/components/schemas/InjectableValues"
          },
          "_currentType": {
            "$ref": "#/components/schemas/LinkedNodeJavaType"
          },
          "config": {
            "$ref": "#/components/schemas/DeserializationConfig"
          },
          "activeView": {
            "type": "object"
          },
          "datatypeFeatures": {
            "$ref": "#/components/schemas/DatatypeFeatures"
          },
          "annotationIntrospector": {
            "$ref": "#/components/schemas/AnnotationIntrospector"
          },
          "typeFactory": {
            "$ref": "#/components/schemas/TypeFactory"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "contextualType": {
            "$ref": "#/components/schemas/JavaType"
          },
          "factory": {
            "$ref": "#/components/schemas/DeserializerFactory"
          },
          "deserializationFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "parser": {
            "$ref": "#/components/schemas/JsonParser"
          },
          "base64Variant": {
            "$ref": "#/components/schemas/Base64Variant"
          },
          "nodeFactory": {
            "$ref": "#/components/schemas/JsonNodeFactory"
          },
          "arrayBuilders": {
            "$ref": "#/components/schemas/ArrayBuilders"
          },
          "_objectIdResolvers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectIdResolver"
            }
          }
        }
      },
      "DefaultSerializerProvider": {
        "type": "object",
        "properties": {
          "_config": {
            "$ref": "#/components/schemas/SerializationConfig"
          },
          "_serializationView": {
            "type": "object"
          },
          "_serializerFactory": {
            "$ref": "#/components/schemas/SerializerFactory"
          },
          "_serializerCache": {
            "$ref": "#/components/schemas/SerializerCache"
          },
          "_unknownTypeSerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "_keySerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "_nullValueSerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "_nullKeySerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "_knownSerializers": {
            "$ref": "#/components/schemas/ReadOnlyClassToSerializerMap"
          },
          "_dateFormat": {
            "$ref": "#/components/schemas/DateFormat"
          },
          "_stdNullValueSerializer": {
            "type": "boolean"
          },
          "defaultKeySerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "nullValueSerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "nullKeySerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "config": {
            "$ref": "#/components/schemas/SerializationConfig"
          },
          "annotationIntrospector": {
            "$ref": "#/components/schemas/AnnotationIntrospector"
          },
          "typeFactory": {
            "$ref": "#/components/schemas/TypeFactory"
          },
          "activeView": {
            "type": "object"
          },
          "datatypeFeatures": {
            "$ref": "#/components/schemas/DatatypeFeatures"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "filterProvider": {
            "$ref": "#/components/schemas/FilterProvider"
          },
          "defaultNullKeySerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "defaultNullValueSerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "generator": {
            "$ref": "#/components/schemas/JsonGenerator"
          }
        }
      },
      "DeserializationConfig": {
        "type": "object",
        "properties": {
          "_mapperFeatures": {
            "format": "int64",
            "type": "integer"
          },
          "_base": {
            "$ref": "#/components/schemas/BaseSettings"
          },
          "annotationProcessingEnabled": {
            "type": "boolean"
          },
          "classIntrospector": {
            "$ref": "#/components/schemas/ClassIntrospector"
          },
          "annotationIntrospector": {
            "$ref": "#/components/schemas/AnnotationIntrospector"
          },
          "propertyNamingStrategy": {
            "$ref": "#/components/schemas/PropertyNamingStrategy"
          },
          "accessorNaming": {
            "$ref": "#/components/schemas/Provider"
          },
          "handlerInstantiator": {
            "$ref": "#/components/schemas/HandlerInstantiator"
          },
          "polymorphicTypeValidator": {
            "$ref": "#/components/schemas/PolymorphicTypeValidator"
          },
          "typeFactory": {
            "$ref": "#/components/schemas/TypeFactory"
          },
          "dateFormat": {
            "$ref": "#/components/schemas/DateFormat"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "base64Variant": {
            "$ref": "#/components/schemas/Base64Variant"
          },
          "cacheProvider": {
            "$ref": "#/components/schemas/CacheProvider"
          },
          "_mixIns": {
            "$ref": "#/components/schemas/SimpleMixInResolver"
          },
          "_subtypeResolver": {
            "$ref": "#/components/schemas/SubtypeResolver"
          },
          "_rootName": {
            "$ref": "#/components/schemas/PropertyName"
          },
          "_view": {
            "type": "object"
          },
          "_attributes": {
            "$ref": "#/components/schemas/ContextAttributes"
          },
          "_rootNames": {
            "$ref": "#/components/schemas/RootNameLookup"
          },
          "_configOverrides": {
            "$ref": "#/components/schemas/ConfigOverrides"
          },
          "_datatypeFeatures": {
            "$ref": "#/components/schemas/DatatypeFeatures"
          },
          "datatypeFeatures": {
            "$ref": "#/components/schemas/DatatypeFeatures"
          },
          "subtypeResolver": {
            "$ref": "#/components/schemas/SubtypeResolver"
          },
          "rootName": {
            "type": "string",
            "deprecated": true
          },
          "fullRootName": {
            "$ref": "#/components/schemas/PropertyName"
          },
          "activeView": {
            "type": "object"
          },
          "attributes": {
            "$ref": "#/components/schemas/ContextAttributes"
          },
          "defaultPropertyInclusion": {
            "$ref": "#/components/schemas/Value"
          },
          "defaultVisibilityChecker": {
            "$ref": "#/components/schemas/VisibilityCheckerObject"
          },
          "defaultSetterInfo": {
            "$ref": "#/components/schemas/Value1"
          },
          "defaultMergeable": {
            "type": "boolean"
          },
          "_problemHandlers": {
            "$ref": "#/components/schemas/LinkedNodeDeserializationProblemHandler"
          },
          "_nodeFactory": {
            "$ref": "#/components/schemas/JsonNodeFactory"
          },
          "_coercionConfigs": {
            "$ref": "#/components/schemas/CoercionConfigs"
          },
          "_ctorDetector": {
            "$ref": "#/components/schemas/ConstructorDetector"
          },
          "_deserFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "_parserFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "_parserFeaturesToChange": {
            "format": "int32",
            "type": "integer"
          },
          "_formatReadFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "_formatReadFeaturesToChange": {
            "format": "int32",
            "type": "integer"
          },
          "baseSettings": {
            "$ref": "#/components/schemas/BaseSettings"
          },
          "deserializationFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "problemHandlers": {
            "$ref": "#/components/schemas/LinkedNodeDeserializationProblemHandler"
          },
          "nodeFactory": {
            "$ref": "#/components/schemas/JsonNodeFactory"
          },
          "constructorDetector": {
            "$ref": "#/components/schemas/ConstructorDetector"
          }
        }
      },
      "DeserializationContext": {
        "type": "object",
        "properties": {
          "_cache": {
            "$ref": "#/components/schemas/DeserializerCache"
          },
          "_factory": {
            "$ref": "#/components/schemas/DeserializerFactory"
          },
          "_config": {
            "$ref": "#/components/schemas/DeserializationConfig"
          },
          "_featureFlags": {
            "format": "int32",
            "type": "integer"
          },
          "_readCapabilities": {
            "$ref": "#/components/schemas/JacksonFeatureSetStreamReadCapability"
          },
          "_view": {
            "type": "object"
          },
          "_injectableValues": {
            "$ref": "#/components/schemas/InjectableValues"
          },
          "_currentType": {
            "$ref": "#/components/schemas/LinkedNodeJavaType"
          },
          "config": {
            "$ref": "#/components/schemas/DeserializationConfig"
          },
          "activeView": {
            "type": "object"
          },
          "datatypeFeatures": {
            "$ref": "#/components/schemas/DatatypeFeatures"
          },
          "annotationIntrospector": {
            "$ref": "#/components/schemas/AnnotationIntrospector"
          },
          "typeFactory": {
            "$ref": "#/components/schemas/TypeFactory"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "contextualType": {
            "$ref": "#/components/schemas/JavaType"
          },
          "factory": {
            "$ref": "#/components/schemas/DeserializerFactory"
          },
          "deserializationFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "parser": {
            "$ref": "#/components/schemas/JsonParser"
          },
          "base64Variant": {
            "$ref": "#/components/schemas/Base64Variant"
          },
          "nodeFactory": {
            "$ref": "#/components/schemas/JsonNodeFactory"
          },
          "arrayBuilders": {
            "$ref": "#/components/schemas/ArrayBuilders"
          }
        }
      },
      "DeserializationProblemHandler": {
        "type": "object"
      },
      "DeserializerCache": {
        "type": "object",
        "properties": {
          "_cachedDeserializers": {
            "$ref": "#/components/schemas/LookupCacheJavaTypeJsonDeserializerObject"
          },
          "_incompleteDeserializers": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "cachable": {
                  "type": "boolean"
                },
                "delegatee": {
                  "$ref": "#/components/schemas/JsonDeserializerObject"
                },
                "knownPropertyNames": {
                  "type": "array",
                  "items": {}
                },
                "nullAccessPattern": {
                  "$ref": "#/components/schemas/AccessPattern"
                },
                "emptyAccessPattern": {
                  "$ref": "#/components/schemas/AccessPattern"
                },
                "objectIdReader": {
                  "$ref": "#/components/schemas/ObjectIdReader"
                },
                "nullValue": {
                  "deprecated": true
                },
                "emptyValue": {
                  "deprecated": true
                }
              }
            }
          },
          "_incompleteDeserializersLock": {
            "$ref": "#/components/schemas/ReentrantLock"
          }
        }
      },
      "DeserializerFactory": {
        "type": "object"
      },
      "DoubleBuilder": {
        "type": "object",
        "properties": {
          "_freeBuffer": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          },
          "_bufferHead": {
            "$ref": "#/components/schemas/Node[D"
          },
          "_bufferTail": {
            "$ref": "#/components/schemas/Node[D"
          },
          "_bufferedEntryCount": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "Duration": {
        "format": "duration",
        "type": "string",
        "example": "P1D"
      },
      "EmitterOdpVerifyRe": {
        "type": "object",
        "properties": {
          "cancelled": {
            "type": "boolean"
          }
        }
      },
      "EmitterVerifyEventKo": {
        "type": "object",
        "properties": {
          "cancelled": {
            "type": "boolean"
          }
        }
      },
      "ErrorReportConfiguration": {
        "type": "object",
        "properties": {
          "_maxErrorTokenLength": {
            "format": "int32",
            "type": "integer"
          },
          "_maxRawContentLength": {
            "format": "int32",
            "type": "integer"
          },
          "maxErrorTokenLength": {
            "format": "int32",
            "type": "integer"
          },
          "maxRawContentLength": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "format": "int32",
            "type": "integer",
            "example": 500
          },
          "httpStatusDescription": {
            "type": "string",
            "example": "Internal Server Error"
          },
          "errorMessage": {
            "type": "string",
            "example": "An unexpected error has occurred. Please contact support."
          },
          "appErrorCode": {
            "type": "string",
            "example": "ODP-<ERR_ID>"
          },
          "timestamp": {
            "format": "int64",
            "type": "integer",
            "example": 1724425035
          },
          "dateTime": {
            "type": "string",
            "example": "2024-08-23T14:57:15.635528"
          }
        }
      },
      "EventService": {
        "type": "object",
        "properties": {
          "logger": {
            "$ref": "#/components/schemas/Logger"
          },
          "SERVICE_IDENTIFIER": {
            "type": "string"
          },
          "verifyKoEmitter": {
            "$ref": "#/components/schemas/EmitterVerifyEventKo"
          },
          "odpVerifyReEmitter": {
            "$ref": "#/components/schemas/EmitterOdpVerifyRe"
          }
        }
      },
      "Features": {
        "type": "object",
        "properties": {
          "_enabled": {
            "format": "int32",
            "type": "integer"
          },
          "_disabled": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "FilterProvider": {
        "type": "object"
      },
      "FloatBuilder": {
        "type": "object",
        "properties": {
          "_freeBuffer": {
            "type": "array",
            "items": {
              "format": "float",
              "type": "number"
            }
          },
          "_bufferHead": {
            "$ref": "#/components/schemas/Node[F"
          },
          "_bufferTail": {
            "$ref": "#/components/schemas/Node[F"
          },
          "_bufferedEntryCount": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "FormatSchema": {
        "type": "object",
        "properties": {
          "schemaType": {
            "type": "string"
          }
        }
      },
      "HandlerInstantiator": {
        "type": "object"
      },
      "Id": {
        "enum": [
          "NONE",
          "CLASS",
          "MINIMAL_CLASS",
          "NAME",
          "SIMPLE_NAME",
          "DEDUCTION",
          "CUSTOM"
        ],
        "type": "string"
      },
      "Include": {
        "enum": [
          "ALWAYS",
          "NON_NULL",
          "NON_ABSENT",
          "NON_EMPTY",
          "NON_DEFAULT",
          "CUSTOM",
          "USE_DEFAULTS"
        ],
        "type": "string"
      },
      "InjectableValues": {
        "type": "object"
      },
      "InputDecorator": {
        "type": "object"
      },
      "Instant": {
        "format": "date-time",
        "type": "string",
        "example": "2022-03-10T16:15:50Z"
      },
      "IntBuilder": {
        "type": "object",
        "properties": {
          "_freeBuffer": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "_bufferHead": {
            "$ref": "#/components/schemas/Node[I"
          },
          "_bufferTail": {
            "$ref": "#/components/schemas/Node[I"
          },
          "_bufferedEntryCount": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "JacksonFeatureSetStreamReadCapability": {
        "type": "object",
        "properties": {
          "_enabled": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "JacksonFeatureSetStreamWriteCapability": {
        "type": "object",
        "properties": {
          "_enabled": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "JavaType": {
        "type": "object",
        "properties": {
          "referenceType": {
            "type": "boolean"
          },
          "_class": {
            "type": "object"
          },
          "_hash": {
            "format": "int32",
            "type": "integer"
          },
          "_valueHandler": {},
          "_typeHandler": {},
          "_asStatic": {
            "type": "boolean"
          },
          "rawClass": {
            "type": "object"
          },
          "abstract": {
            "type": "boolean"
          },
          "concrete": {
            "type": "boolean"
          },
          "throwable": {
            "type": "boolean"
          },
          "arrayType": {
            "type": "boolean"
          },
          "enumType": {
            "type": "boolean"
          },
          "enumImplType": {
            "type": "boolean"
          },
          "recordType": {
            "type": "boolean"
          },
          "iterationType": {
            "type": "boolean"
          },
          "interface": {
            "type": "boolean"
          },
          "primitive": {
            "type": "boolean"
          },
          "final": {
            "type": "boolean"
          },
          "containerType": {
            "type": "boolean"
          },
          "collectionLikeType": {
            "type": "boolean"
          },
          "mapLikeType": {
            "type": "boolean"
          },
          "javaLangObject": {
            "type": "boolean"
          },
          "keyType": {
            "$ref": "#/components/schemas/JavaType"
          },
          "contentType": {
            "$ref": "#/components/schemas/JavaType"
          },
          "referencedType": {
            "$ref": "#/components/schemas/JavaType"
          },
          "parameterSource": {
            "type": "object",
            "deprecated": true
          },
          "bindings": {
            "$ref": "#/components/schemas/TypeBindings"
          },
          "superClass": {
            "$ref": "#/components/schemas/JavaType"
          },
          "interfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JavaType"
            }
          },
          "valueHandler": {},
          "typeHandler": {},
          "contentValueHandler": {},
          "contentTypeHandler": {},
          "genericSignature": {
            "type": "string"
          },
          "erasedSignature": {
            "type": "string"
          }
        }
      },
      "JsonDeserializerObject": {
        "type": "object",
        "properties": {
          "cachable": {
            "type": "boolean"
          },
          "delegatee": {
            "$ref": "#/components/schemas/JsonDeserializerObject"
          },
          "knownPropertyNames": {
            "type": "array",
            "items": {}
          },
          "nullAccessPattern": {
            "$ref": "#/components/schemas/AccessPattern"
          },
          "emptyAccessPattern": {
            "$ref": "#/components/schemas/AccessPattern"
          },
          "objectIdReader": {
            "$ref": "#/components/schemas/ObjectIdReader"
          },
          "nullValue": {
            "deprecated": true
          },
          "emptyValue": {
            "deprecated": true
          }
        }
      },
      "JsonFactory": {
        "type": "object",
        "properties": {
          "_factoryFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "_parserFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "_generatorFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "_recyclerPool": {
            "$ref": "#/components/schemas/RecyclerPoolBufferRecycler"
          },
          "_objectCodec": {
            "$ref": "#/components/schemas/ObjectCodec"
          },
          "_characterEscapes": {
            "$ref": "#/components/schemas/CharacterEscapes"
          },
          "_streamReadConstraints": {
            "$ref": "#/components/schemas/StreamReadConstraints"
          },
          "_errorReportConfiguration": {
            "$ref": "#/components/schemas/ErrorReportConfiguration"
          },
          "_streamWriteConstraints": {
            "$ref": "#/components/schemas/StreamWriteConstraints"
          },
          "_inputDecorator": {
            "$ref": "#/components/schemas/InputDecorator"
          },
          "_outputDecorator": {
            "$ref": "#/components/schemas/OutputDecorator"
          },
          "_generatorDecorators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonGeneratorDecorator"
            }
          },
          "_rootValueSeparator": {
            "$ref": "#/components/schemas/SerializableString"
          },
          "_maximumNonEscapedChar": {
            "format": "int32",
            "type": "integer"
          },
          "_quoteChar": {
            "format": "byte",
            "type": "string"
          },
          "formatReadFeatureType": {
            "type": "object"
          },
          "formatWriteFeatureType": {
            "type": "object"
          },
          "formatName": {
            "type": "string"
          },
          "factoryFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "parserFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "generatorFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "formatParserFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "formatGeneratorFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "inputDecorator": {
            "$ref": "#/components/schemas/InputDecorator"
          },
          "characterEscapes": {
            "$ref": "#/components/schemas/CharacterEscapes"
          },
          "outputDecorator": {
            "$ref": "#/components/schemas/OutputDecorator"
          },
          "rootValueSeparator": {
            "type": "string"
          },
          "codec": {
            "$ref": "#/components/schemas/ObjectCodec"
          }
        }
      },
      "JsonGenerator": {
        "type": "object",
        "properties": {
          "_cfgPrettyPrinter": {
            "$ref": "#/components/schemas/PrettyPrinter"
          },
          "codec": {
            "$ref": "#/components/schemas/ObjectCodec"
          },
          "outputContext": {
            "$ref": "#/components/schemas/JsonStreamContext"
          },
          "outputTarget": {},
          "currentValue": {
            "deprecated": true
          },
          "featureMask": {
            "format": "int32",
            "type": "integer"
          },
          "formatFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "schema": {
            "$ref": "#/components/schemas/FormatSchema"
          },
          "prettyPrinter": {
            "$ref": "#/components/schemas/PrettyPrinter"
          },
          "highestEscapedChar": {
            "format": "int32",
            "type": "integer"
          },
          "characterEscapes": {
            "$ref": "#/components/schemas/CharacterEscapes"
          },
          "outputBuffered": {
            "format": "int32",
            "type": "integer"
          },
          "writeCapabilities": {
            "$ref": "#/components/schemas/JacksonFeatureSetStreamWriteCapability"
          },
          "closed": {
            "type": "boolean"
          }
        }
      },
      "JsonGeneratorDecorator": {
        "type": "object"
      },
      "JsonLocation": {
        "type": "object",
        "properties": {
          "_totalBytes": {
            "format": "int64",
            "type": "integer"
          },
          "_totalChars": {
            "format": "int64",
            "type": "integer"
          },
          "_lineNr": {
            "format": "int32",
            "type": "integer"
          },
          "_columnNr": {
            "format": "int32",
            "type": "integer"
          },
          "_contentReference": {
            "$ref": "#/components/schemas/ContentReference"
          },
          "sourceRef": {
            "deprecated": true
          },
          "lineNr": {
            "format": "int32",
            "type": "integer"
          },
          "columnNr": {
            "format": "int32",
            "type": "integer"
          },
          "charOffset": {
            "format": "int64",
            "type": "integer"
          },
          "byteOffset": {
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "JsonNodeFactory": {
        "type": "object",
        "properties": {
          "_cfgBigDecimalExact": {
            "type": "boolean",
            "deprecated": true
          },
          "maxElementIndexForInsert": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "JsonParser": {
        "type": "object",
        "properties": {
          "_features": {
            "format": "int32",
            "type": "integer"
          },
          "codec": {
            "$ref": "#/components/schemas/ObjectCodec"
          },
          "inputSource": {},
          "requestPayloadOnError": {
            "$ref": "#/components/schemas/RequestPayload"
          },
          "schema": {
            "$ref": "#/components/schemas/FormatSchema"
          },
          "nonBlockingInputFeeder": {
            "$ref": "#/components/schemas/NonBlockingInputFeeder"
          },
          "readCapabilities": {
            "$ref": "#/components/schemas/JacksonFeatureSetStreamReadCapability"
          },
          "closed": {
            "type": "boolean"
          },
          "parsingContext": {
            "$ref": "#/components/schemas/JsonStreamContext"
          },
          "currentLocation": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonLocation"
              }
            ],
            "deprecated": true
          },
          "tokenLocation": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonLocation"
              }
            ],
            "deprecated": true
          },
          "currentValue": {
            "deprecated": true
          },
          "featureMask": {
            "format": "int32",
            "type": "integer"
          },
          "formatFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "currentToken": {
            "$ref": "#/components/schemas/JsonToken"
          },
          "currentTokenId": {
            "format": "int32",
            "type": "integer",
            "deprecated": true
          },
          "expectedStartArrayToken": {
            "type": "boolean"
          },
          "expectedStartObjectToken": {
            "type": "boolean"
          },
          "expectedNumberIntToken": {
            "type": "boolean"
          },
          "naN": {
            "type": "boolean"
          },
          "lastClearedToken": {
            "$ref": "#/components/schemas/JsonToken"
          },
          "currentName": {
            "type": "string",
            "deprecated": true
          },
          "text": {
            "type": "string"
          },
          "textCharacters": {
            "type": "array",
            "items": {
              "format": "byte",
              "type": "string"
            }
          },
          "textLength": {
            "format": "int32",
            "type": "integer"
          },
          "textOffset": {
            "format": "int32",
            "type": "integer"
          },
          "numberValue": {
            "type": "number"
          },
          "numberValueExact": {
            "type": "number"
          },
          "numberValueDeferred": {},
          "numberType": {
            "$ref": "#/components/schemas/NumberType"
          },
          "numberTypeFP": {
            "$ref": "#/components/schemas/NumberTypeFP"
          },
          "byteValue": {
            "format": "byte",
            "type": "string"
          },
          "shortValue": {
            "type": "integer"
          },
          "intValue": {
            "format": "int32",
            "type": "integer"
          },
          "longValue": {
            "format": "int64",
            "type": "integer"
          },
          "bigIntegerValue": {
            "type": "integer"
          },
          "floatValue": {
            "format": "float",
            "type": "number"
          },
          "doubleValue": {
            "format": "double",
            "type": "number"
          },
          "decimalValue": {
            "type": "number"
          },
          "booleanValue": {
            "type": "boolean"
          },
          "embeddedObject": {},
          "binaryValue": {
            "format": "binary",
            "type": "string"
          },
          "valueAsInt": {
            "format": "int32",
            "type": "integer"
          },
          "valueAsLong": {
            "format": "int64",
            "type": "integer"
          },
          "valueAsDouble": {
            "format": "double",
            "type": "number"
          },
          "valueAsBoolean": {
            "type": "boolean"
          },
          "valueAsString": {
            "type": "string"
          },
          "objectId": {},
          "typeId": {}
        }
      },
      "JsonSerializerObject": {
        "type": "object",
        "properties": {
          "unwrappingSerializer": {
            "type": "boolean"
          },
          "delegatee": {
            "$ref": "#/components/schemas/JsonSerializerObject1"
          }
        }
      },
      "JsonSerializerObject1": {
        "type": "object",
        "properties": {
          "unwrappingSerializer": {
            "type": "boolean"
          },
          "delegatee": {
            "$ref": "#/components/schemas/JsonSerializerObject1"
          }
        }
      },
      "JsonStreamContext": {
        "type": "object",
        "properties": {
          "_type": {
            "format": "int32",
            "type": "integer"
          },
          "_index": {
            "format": "int32",
            "type": "integer"
          },
          "_nestingDepth": {
            "format": "int32",
            "type": "integer"
          },
          "parent": {
            "$ref": "#/components/schemas/JsonStreamContext"
          },
          "nestingDepth": {
            "format": "int32",
            "type": "integer"
          },
          "typeDesc": {
            "type": "string",
            "deprecated": true
          },
          "entryCount": {
            "format": "int32",
            "type": "integer"
          },
          "currentIndex": {
            "format": "int32",
            "type": "integer"
          },
          "currentName": {
            "type": "string"
          },
          "currentValue": {}
        }
      },
      "JsonToken": {
        "enum": [
          "NOT_AVAILABLE",
          "START_OBJECT",
          "END_OBJECT",
          "START_ARRAY",
          "END_ARRAY",
          "FIELD_NAME",
          "VALUE_EMBEDDED_OBJECT",
          "VALUE_STRING",
          "VALUE_NUMBER_INT",
          "VALUE_NUMBER_FLOAT",
          "VALUE_TRUE",
          "VALUE_FALSE",
          "VALUE_NULL"
        ],
        "type": "string"
      },
      "LinkedNodeDeserializationProblemHandler": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/DeserializationProblemHandler"
          },
          "next": {
            "$ref": "#/components/schemas/LinkedNodeDeserializationProblemHandler"
          }
        }
      },
      "LinkedNodeJavaType": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/JavaType"
          },
          "next": {
            "$ref": "#/components/schemas/LinkedNodeJavaType"
          }
        }
      },
      "LocalDateTime": {
        "format": "date-time",
        "type": "string",
        "example": "2022-03-10T12:15:50"
      },
      "LocalTime": {
        "format": "local-time",
        "type": "string",
        "externalDocs": {
          "description": "As defined by 'partial-time' in RFC3339",
          "url": "https://www.rfc-editor.org/rfc/rfc3339.html#section-5.6"
        },
        "example": "13:45:30.123456789"
      },
      "Locale": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "script": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "variant": {
            "type": "string"
          },
          "extensionKeys": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "format": "byte",
              "type": "string"
            }
          },
          "unicodeLocaleAttributes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unicodeLocaleKeys": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "iSO3Language": {
            "type": "string"
          },
          "iSO3Country": {
            "type": "string"
          },
          "displayLanguage": {
            "type": "string"
          },
          "displayScript": {
            "type": "string"
          },
          "displayCountry": {
            "type": "string"
          },
          "displayVariant": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "Logger": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "traceEnabled": {
            "type": "boolean"
          },
          "debugEnabled": {
            "type": "boolean"
          },
          "infoEnabled": {
            "type": "boolean"
          },
          "warnEnabled": {
            "type": "boolean"
          },
          "errorEnabled": {
            "type": "boolean"
          }
        }
      },
      "LongBuilder": {
        "type": "object",
        "properties": {
          "_freeBuffer": {
            "type": "array",
            "items": {
              "format": "int64",
              "type": "integer"
            }
          },
          "_bufferHead": {
            "$ref": "#/components/schemas/Node[J"
          },
          "_bufferTail": {
            "$ref": "#/components/schemas/Node[J"
          },
          "_bufferedEntryCount": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "LookupCacheJavaTypeJsonDeserializerObject": {
        "type": "object"
      },
      "LookupCacheObjectJavaType": {
        "type": "object"
      },
      "LookupCacheTypeKeyJsonSerializerObject": {
        "type": "object"
      },
      "MergeInfo": {
        "type": "object",
        "properties": {
          "getter": {
            "$ref": "#/components/schemas/AnnotatedMember"
          },
          "fromDefaults": {
            "type": "boolean"
          }
        }
      },
      "MixInResolver": {
        "type": "object"
      },
      "Month": {
        "enum": [
          "JANUARY",
          "FEBRUARY",
          "MARCH",
          "APRIL",
          "MAY",
          "JUNE",
          "JULY",
          "AUGUST",
          "SEPTEMBER",
          "OCTOBER",
          "NOVEMBER",
          "DECEMBER"
        ],
        "type": "string"
      },
      "MutableCoercionConfig": {
        "type": "object",
        "properties": {
          "_acceptBlankAsEmpty": {
            "type": "boolean"
          },
          "_coercionsByShape": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoercionAction"
            }
          },
          "acceptBlankAsEmpty": {
            "type": "boolean"
          }
        }
      },
      "MutableConfigOverride": {
        "type": "object",
        "properties": {
          "_format": {
            "$ref": "#/components/schemas/Value2"
          },
          "_include": {
            "$ref": "#/components/schemas/Value"
          },
          "_includeAsProperty": {
            "$ref": "#/components/schemas/Value"
          },
          "_ignorals": {
            "$ref": "#/components/schemas/Value3"
          },
          "_setterInfo": {
            "$ref": "#/components/schemas/Value1"
          },
          "_visibility": {
            "$ref": "#/components/schemas/Value4"
          },
          "_isIgnoredType": {
            "type": "boolean"
          },
          "_mergeable": {
            "type": "boolean"
          },
          "format": {
            "$ref": "#/components/schemas/Value2"
          },
          "include": {
            "$ref": "#/components/schemas/Value"
          },
          "includeAsProperty": {
            "$ref": "#/components/schemas/Value"
          },
          "ignorals": {
            "$ref": "#/components/schemas/Value3"
          },
          "isIgnoredType": {
            "type": "boolean"
          },
          "setterInfo": {
            "$ref": "#/components/schemas/Value1"
          },
          "visibility": {
            "$ref": "#/components/schemas/Value4"
          },
          "mergeable": {
            "type": "boolean"
          }
        }
      },
      "Node[B": {
        "type": "object",
        "properties": {
          "_data": {
            "format": "binary",
            "type": "string",
            "items": {
              "format": "byte",
              "type": "string"
            }
          },
          "_dataLength": {
            "format": "int32",
            "type": "integer"
          },
          "_next": {
            "$ref": "#/components/schemas/Node[B"
          },
          "data": {
            "format": "binary",
            "type": "string",
            "items": {
              "format": "byte",
              "type": "string"
            }
          }
        }
      },
      "Node[D": {
        "type": "object",
        "properties": {
          "_data": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          },
          "_dataLength": {
            "format": "int32",
            "type": "integer"
          },
          "_next": {
            "$ref": "#/components/schemas/Node[D"
          },
          "data": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          }
        }
      },
      "Node[F": {
        "type": "object",
        "properties": {
          "_data": {
            "type": "array",
            "items": {
              "format": "float",
              "type": "number"
            }
          },
          "_dataLength": {
            "format": "int32",
            "type": "integer"
          },
          "_next": {
            "$ref": "#/components/schemas/Node[F"
          },
          "data": {
            "type": "array",
            "items": {
              "format": "float",
              "type": "number"
            }
          }
        }
      },
      "Node[I": {
        "type": "object",
        "properties": {
          "_data": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "_dataLength": {
            "format": "int32",
            "type": "integer"
          },
          "_next": {
            "$ref": "#/components/schemas/Node[I"
          },
          "data": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "Node[J": {
        "type": "object",
        "properties": {
          "_data": {
            "type": "array",
            "items": {
              "format": "int64",
              "type": "integer"
            }
          },
          "_dataLength": {
            "format": "int32",
            "type": "integer"
          },
          "_next": {
            "$ref": "#/components/schemas/Node[J"
          },
          "data": {
            "type": "array",
            "items": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      },
      "Node[S": {
        "type": "object",
        "properties": {
          "_data": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "_dataLength": {
            "format": "int32",
            "type": "integer"
          },
          "_next": {
            "$ref": "#/components/schemas/Node[S"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "Node[Z": {
        "type": "object",
        "properties": {
          "_data": {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          },
          "_dataLength": {
            "format": "int32",
            "type": "integer"
          },
          "_next": {
            "$ref": "#/components/schemas/Node[Z"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          }
        }
      },
      "NonBlockingInputFeeder": {
        "type": "object"
      },
      "NullValueProvider": {
        "type": "object",
        "properties": {
          "nullAccessPattern": {
            "$ref": "#/components/schemas/AccessPattern"
          }
        }
      },
      "Nulls": {
        "enum": [
          "SET",
          "SKIP",
          "FAIL",
          "AS_EMPTY",
          "DEFAULT"
        ],
        "type": "string"
      },
      "NumberFormat": {
        "type": "object",
        "properties": {
          "groupingUsed": {
            "type": "boolean"
          },
          "maxIntegerDigits": {
            "format": "byte",
            "type": "string"
          },
          "minIntegerDigits": {
            "format": "byte",
            "type": "string"
          },
          "maxFractionDigits": {
            "format": "byte",
            "type": "string"
          },
          "minFractionDigits": {
            "format": "byte",
            "type": "string"
          },
          "parseIntegerOnly": {
            "type": "boolean"
          },
          "maximumIntegerDigits": {
            "format": "int32",
            "type": "integer"
          },
          "minimumIntegerDigits": {
            "format": "int32",
            "type": "integer"
          },
          "maximumFractionDigits": {
            "format": "int32",
            "type": "integer"
          },
          "minimumFractionDigits": {
            "format": "int32",
            "type": "integer"
          },
          "serialVersionOnStream": {
            "format": "int32",
            "type": "integer"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "roundingMode": {
            "$ref": "#/components/schemas/RoundingMode"
          }
        }
      },
      "NumberType": {
        "enum": [
          "INT",
          "LONG",
          "BIG_INTEGER",
          "FLOAT",
          "DOUBLE",
          "BIG_DECIMAL"
        ],
        "type": "string"
      },
      "NumberTypeFP": {
        "enum": [
          "FLOAT16",
          "FLOAT32",
          "DOUBLE64",
          "BIG_DECIMAL",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "ObjectCodec": {
        "type": "object",
        "properties": {
          "jsonFactory": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonFactory"
              }
            ],
            "deprecated": true
          },
          "factory": {
            "$ref": "#/components/schemas/JsonFactory"
          }
        }
      },
      "ObjectIdGeneratorObject": {
        "type": "object",
        "properties": {
          "scope": {
            "type": "object"
          }
        }
      },
      "ObjectIdInfo": {
        "type": "object",
        "properties": {
          "_propertyName": {
            "$ref": "#/components/schemas/PropertyName"
          },
          "_generator": {
            "type": "object"
          },
          "_resolver": {
            "type": "object"
          },
          "_scope": {
            "type": "object"
          },
          "_alwaysAsId": {
            "type": "boolean"
          },
          "propertyName": {
            "$ref": "#/components/schemas/PropertyName"
          },
          "scope": {
            "type": "object"
          },
          "generatorType": {
            "type": "object"
          },
          "resolverType": {
            "type": "object"
          },
          "alwaysAsId": {
            "type": "boolean"
          }
        }
      },
      "ObjectIdReader": {
        "type": "object",
        "properties": {
          "_idType": {
            "$ref": "#/components/schemas/JavaType"
          },
          "propertyName": {
            "$ref": "#/components/schemas/PropertyName"
          },
          "generator": {
            "$ref": "#/components/schemas/ObjectIdGeneratorObject"
          },
          "resolver": {
            "$ref": "#/components/schemas/ObjectIdResolver"
          },
          "_deserializer": {
            "$ref": "#/components/schemas/JsonDeserializerObject1"
          },
          "idProperty": {
            "$ref": "#/components/schemas/SettableBeanProperty"
          },
          "deserializer": {
            "$ref": "#/components/schemas/JsonDeserializerObject1"
          },
          "idType": {
            "$ref": "#/components/schemas/JavaType"
          }
        }
      },
      "ObjectIdResolver": {
        "type": "object"
      },
      "ObjectMapper": {
        "type": "object",
        "properties": {
          "jsonFactory": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonFactory"
              }
            ],
            "deprecated": true
          },
          "_jsonFactory": {
            "$ref": "#/components/schemas/JsonFactory"
          },
          "_typeFactory": {
            "$ref": "#/components/schemas/TypeFactory"
          },
          "_injectableValues": {
            "$ref": "#/components/schemas/InjectableValues"
          },
          "_subtypeResolver": {
            "$ref": "#/components/schemas/SubtypeResolver"
          },
          "_configOverrides": {
            "$ref": "#/components/schemas/ConfigOverrides"
          },
          "_coercionConfigs": {
            "$ref": "#/components/schemas/CoercionConfigs"
          },
          "_mixIns": {
            "$ref": "#/components/schemas/SimpleMixInResolver"
          },
          "_serializationConfig": {
            "$ref": "#/components/schemas/SerializationConfig"
          },
          "_serializerProvider": {
            "$ref": "#/components/schemas/DefaultSerializerProvider"
          },
          "_serializerFactory": {
            "$ref": "#/components/schemas/SerializerFactory"
          },
          "_deserializationConfig": {
            "$ref": "#/components/schemas/DeserializationConfig"
          },
          "_deserializationContext": {
            "$ref": "#/components/schemas/DefaultDeserializationContext"
          },
          "_registeredModuleTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {}
          },
          "_rootDeserializers": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "cachable": {
                  "type": "boolean"
                },
                "delegatee": {
                  "$ref": "#/components/schemas/JsonDeserializerObject"
                },
                "knownPropertyNames": {
                  "type": "array",
                  "items": {}
                },
                "nullAccessPattern": {
                  "$ref": "#/components/schemas/AccessPattern"
                },
                "emptyAccessPattern": {
                  "$ref": "#/components/schemas/AccessPattern"
                },
                "objectIdReader": {
                  "$ref": "#/components/schemas/ObjectIdReader"
                },
                "nullValue": {
                  "deprecated": true
                },
                "emptyValue": {
                  "deprecated": true
                }
              }
            }
          },
          "dateFormat": {
            "$ref": "#/components/schemas/DateFormat"
          },
          "deserializationConfig": {
            "$ref": "#/components/schemas/DeserializationConfig"
          },
          "deserializationContext": {
            "$ref": "#/components/schemas/DeserializationContext"
          },
          "factory": {
            "$ref": "#/components/schemas/JsonFactory"
          },
          "injectableValues": {
            "$ref": "#/components/schemas/InjectableValues"
          },
          "nodeFactory": {
            "$ref": "#/components/schemas/JsonNodeFactory"
          },
          "polymorphicTypeValidator": {
            "$ref": "#/components/schemas/PolymorphicTypeValidator"
          },
          "propertyNamingStrategy": {
            "$ref": "#/components/schemas/PropertyNamingStrategy"
          },
          "registeredModuleIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {}
          },
          "serializationConfig": {
            "$ref": "#/components/schemas/SerializationConfig"
          },
          "serializerFactory": {
            "$ref": "#/components/schemas/SerializerFactory"
          },
          "serializerProvider": {
            "$ref": "#/components/schemas/SerializerProvider"
          },
          "serializerProviderInstance": {
            "$ref": "#/components/schemas/SerializerProvider"
          },
          "subtypeResolver": {
            "$ref": "#/components/schemas/SubtypeResolver"
          },
          "typeFactory": {
            "$ref": "#/components/schemas/TypeFactory"
          },
          "visibilityChecker": {
            "$ref": "#/components/schemas/VisibilityCheckerObject"
          },
          "filters": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterProvider"
              }
            ],
            "deprecated": true
          },
          "mixInAnnotations": {
            "type": "object",
            "additionalProperties": {},
            "deprecated": true
          }
        }
      },
      "OutputDecorator": {
        "type": "object"
      },
      "PaddingReadBehaviour": {
        "enum": [
          "PADDING_FORBIDDEN",
          "PADDING_REQUIRED",
          "PADDING_ALLOWED"
        ],
        "type": "string"
      },
      "PaymentOptionsResource": {
        "type": "object",
        "properties": {
          "paymentOptionsService": {
            "$ref": "#/components/schemas/PaymentOptionsService"
          }
        }
      },
      "PaymentOptionsService": {
        "type": "object",
        "properties": {
          "logger": {
            "$ref": "#/components/schemas/Logger"
          },
          "formatter": {
            "$ref": "#/components/schemas/DateTimeFormatter"
          },
          "objectMapper": {
            "$ref": "#/components/schemas/ObjectMapper"
          },
          "configCacheService": {
            "$ref": "#/components/schemas/ConfigCacheService"
          },
          "creditorInstitutionService": {
            "$ref": "#/components/schemas/CreditorInstitutionService"
          },
          "eventService": {
            "$ref": "#/components/schemas/EventService"
          },
          "configData": {
            "$ref": "#/components/schemas/ConfigDataV1"
          }
        }
      },
      "PaymentServiceProvider": {
        "type": "object",
        "properties": {
          "psp_code": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "business_name": {
            "type": "string"
          },
          "abi": {
            "type": "string"
          },
          "bic": {
            "type": "string"
          },
          "my_bank_code": {
            "type": "string"
          },
          "digital_stamp": {
            "type": "boolean"
          },
          "agid_psp": {
            "type": "boolean"
          },
          "tax_code": {
            "type": "string"
          },
          "vat_number": {
            "type": "string"
          }
        }
      },
      "PolymorphicTypeValidator": {
        "type": "object"
      },
      "PrettyPrinter": {
        "type": "object"
      },
      "PropertyMetadata": {
        "type": "object",
        "properties": {
          "_required": {
            "type": "boolean"
          },
          "_description": {
            "type": "string"
          },
          "_index": {
            "format": "int32",
            "type": "integer"
          },
          "_defaultValue": {
            "type": "string"
          },
          "_valueNulls": {
            "$ref": "#/components/schemas/Nulls"
          },
          "_contentNulls": {
            "$ref": "#/components/schemas/Nulls"
          },
          "description": {
            "type": "string"
          },
          "defaultValue": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "index": {
            "format": "int32",
            "type": "integer"
          },
          "mergeInfo": {
            "$ref": "#/components/schemas/MergeInfo"
          },
          "valueNulls": {
            "$ref": "#/components/schemas/Nulls"
          },
          "contentNulls": {
            "$ref": "#/components/schemas/Nulls"
          }
        }
      },
      "PropertyName": {
        "type": "object",
        "properties": {
          "_simpleName": {
            "type": "string"
          },
          "_namespace": {
            "type": "string"
          },
          "_encodedSimple": {
            "$ref": "#/components/schemas/SerializableString"
          },
          "simpleName": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PropertyNamingStrategy": {
        "type": "object"
      },
      "ProtocolEnum": {
        "enum": [
          "HTTPS",
          "HTTP"
        ],
        "type": "string"
      },
      "ProtocolEnum1": {
        "enum": [
          "HTTPS",
          "HTTP"
        ],
        "type": "string"
      },
      "Provider": {
        "type": "object"
      },
      "Proxy": {
        "type": "object",
        "properties": {
          "proxy_host": {
            "type": "string"
          },
          "proxy_port": {
            "format": "int64",
            "type": "integer"
          },
          "proxy_username": {
            "type": "string"
          },
          "proxy_password": {
            "type": "string"
          }
        }
      },
      "ReadOnlyClassToSerializerMap": {
        "type": "object",
        "properties": {
          "_buckets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bucket"
            }
          },
          "_size": {
            "format": "int32",
            "type": "integer"
          },
          "_mask": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "RecyclerPoolBufferRecycler": {
        "type": "object"
      },
      "Redirect": {
        "type": "object",
        "properties": {
          "protocol": {
            "$ref": "#/components/schemas/ProtocolEnum"
          },
          "ip": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "port": {
            "format": "int64",
            "type": "integer"
          },
          "query_string": {
            "type": "string"
          }
        }
      },
      "ReentrantLock": {
        "type": "object",
        "properties": {
          "sync": {
            "$ref": "#/components/schemas/Sync"
          },
          "holdCount": {
            "format": "int32",
            "type": "integer"
          },
          "heldByCurrentThread": {
            "type": "boolean"
          },
          "locked": {
            "type": "boolean"
          },
          "fair": {
            "type": "boolean"
          },
          "owner": {
            "type": "object"
          },
          "queueLength": {
            "format": "int32",
            "type": "integer"
          },
          "queuedThreads": {
            "type": "array",
            "items": {}
          }
        }
      },
      "RequestPayload": {
        "type": "object",
        "properties": {
          "_payloadAsBytes": {
            "format": "binary",
            "type": "string"
          },
          "_payloadAsText": {
            "type": "string"
          },
          "_charset": {
            "type": "string"
          },
          "rawPayload": {}
        }
      },
      "ResolverStyle": {
        "enum": [
          "STRICT",
          "SMART",
          "LENIENT"
        ],
        "type": "string"
      },
      "RootNameLookup": {
        "type": "object"
      },
      "RoundingMode": {
        "enum": [
          "UP",
          "DOWN",
          "CEILING",
          "FLOOR",
          "HALF_UP",
          "HALF_DOWN",
          "HALF_EVEN",
          "UNNECESSARY"
        ],
        "type": "string"
      },
      "SerializableString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "SerializationConfig": {
        "type": "object",
        "properties": {
          "_mapperFeatures": {
            "format": "int64",
            "type": "integer"
          },
          "_base": {
            "$ref": "#/components/schemas/BaseSettings"
          },
          "annotationProcessingEnabled": {
            "type": "boolean"
          },
          "classIntrospector": {
            "$ref": "#/components/schemas/ClassIntrospector"
          },
          "annotationIntrospector": {
            "$ref": "#/components/schemas/AnnotationIntrospector"
          },
          "propertyNamingStrategy": {
            "$ref": "#/components/schemas/PropertyNamingStrategy"
          },
          "accessorNaming": {
            "$ref": "#/components/schemas/Provider"
          },
          "handlerInstantiator": {
            "$ref": "#/components/schemas/HandlerInstantiator"
          },
          "polymorphicTypeValidator": {
            "$ref": "#/components/schemas/PolymorphicTypeValidator"
          },
          "typeFactory": {
            "$ref": "#/components/schemas/TypeFactory"
          },
          "dateFormat": {
            "$ref": "#/components/schemas/DateFormat"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "base64Variant": {
            "$ref": "#/components/schemas/Base64Variant"
          },
          "cacheProvider": {
            "$ref": "#/components/schemas/CacheProvider"
          },
          "_mixIns": {
            "$ref": "#/components/schemas/SimpleMixInResolver"
          },
          "_subtypeResolver": {
            "$ref": "#/components/schemas/SubtypeResolver"
          },
          "_rootName": {
            "$ref": "#/components/schemas/PropertyName"
          },
          "_view": {
            "type": "object"
          },
          "_attributes": {
            "$ref": "#/components/schemas/ContextAttributes"
          },
          "_rootNames": {
            "$ref": "#/components/schemas/RootNameLookup"
          },
          "_configOverrides": {
            "$ref": "#/components/schemas/ConfigOverrides"
          },
          "_datatypeFeatures": {
            "$ref": "#/components/schemas/DatatypeFeatures"
          },
          "datatypeFeatures": {
            "$ref": "#/components/schemas/DatatypeFeatures"
          },
          "subtypeResolver": {
            "$ref": "#/components/schemas/SubtypeResolver"
          },
          "rootName": {
            "type": "string",
            "deprecated": true
          },
          "fullRootName": {
            "$ref": "#/components/schemas/PropertyName"
          },
          "activeView": {
            "type": "object"
          },
          "attributes": {
            "$ref": "#/components/schemas/ContextAttributes"
          },
          "defaultPropertyInclusion": {
            "$ref": "#/components/schemas/Value"
          },
          "defaultVisibilityChecker": {
            "$ref": "#/components/schemas/VisibilityCheckerObject"
          },
          "defaultSetterInfo": {
            "$ref": "#/components/schemas/Value1"
          },
          "defaultMergeable": {
            "type": "boolean"
          },
          "_filterProvider": {
            "$ref": "#/components/schemas/FilterProvider"
          },
          "_defaultPrettyPrinter": {
            "$ref": "#/components/schemas/PrettyPrinter"
          },
          "_serFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "_generatorFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "_generatorFeaturesToChange": {
            "format": "int32",
            "type": "integer"
          },
          "_formatWriteFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "_formatWriteFeaturesToChange": {
            "format": "int32",
            "type": "integer"
          },
          "serializationInclusion": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/Include"
              }
            ],
            "deprecated": true
          },
          "serializationFeatures": {
            "format": "int32",
            "type": "integer"
          },
          "filterProvider": {
            "$ref": "#/components/schemas/FilterProvider"
          },
          "defaultPrettyPrinter": {
            "$ref": "#/components/schemas/PrettyPrinter"
          }
        }
      },
      "SerializerCache": {
        "type": "object",
        "properties": {
          "_sharedMap": {
            "$ref": "#/components/schemas/LookupCacheTypeKeyJsonSerializerObject"
          },
          "_readOnlyMap": {
            "$ref": "#/components/schemas/AtomicReferenceReadOnlyClassToSerializerMap"
          },
          "readOnlyLookupMap": {
            "$ref": "#/components/schemas/ReadOnlyClassToSerializerMap"
          }
        }
      },
      "SerializerFactory": {
        "type": "object"
      },
      "SerializerProvider": {
        "type": "object",
        "properties": {
          "_config": {
            "$ref": "#/components/schemas/SerializationConfig"
          },
          "_serializationView": {
            "type": "object"
          },
          "_serializerFactory": {
            "$ref": "#/components/schemas/SerializerFactory"
          },
          "_serializerCache": {
            "$ref": "#/components/schemas/SerializerCache"
          },
          "_unknownTypeSerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "_keySerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "_nullValueSerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "_nullKeySerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "_knownSerializers": {
            "$ref": "#/components/schemas/ReadOnlyClassToSerializerMap"
          },
          "_dateFormat": {
            "$ref": "#/components/schemas/DateFormat"
          },
          "_stdNullValueSerializer": {
            "type": "boolean"
          },
          "defaultKeySerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "nullValueSerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "nullKeySerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "config": {
            "$ref": "#/components/schemas/SerializationConfig"
          },
          "annotationIntrospector": {
            "$ref": "#/components/schemas/AnnotationIntrospector"
          },
          "typeFactory": {
            "$ref": "#/components/schemas/TypeFactory"
          },
          "activeView": {
            "type": "object"
          },
          "datatypeFeatures": {
            "$ref": "#/components/schemas/DatatypeFeatures"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "filterProvider": {
            "$ref": "#/components/schemas/FilterProvider"
          },
          "generator": {
            "$ref": "#/components/schemas/JsonGenerator"
          },
          "defaultNullKeySerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          },
          "defaultNullValueSerializer": {
            "$ref": "#/components/schemas/JsonSerializerObject"
          }
        }
      },
      "Service": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "target_host": {
            "type": "string"
          },
          "target_port": {
            "format": "int64",
            "type": "integer"
          },
          "target_path": {
            "type": "string"
          }
        }
      },
      "SettableBeanProperty": {
        "type": "object",
        "properties": {
          "_metadata": {
            "$ref": "#/components/schemas/PropertyMetadata"
          },
          "required": {
            "type": "boolean"
          },
          "metadata": {
            "$ref": "#/components/schemas/PropertyMetadata"
          },
          "virtual": {
            "type": "boolean"
          },
          "_propName": {
            "$ref": "#/components/schemas/PropertyName"
          },
          "_type": {
            "$ref": "#/components/schemas/JavaType"
          },
          "_wrapperName": {
            "$ref": "#/components/schemas/PropertyName"
          },
          "_valueDeserializer": {
            "$ref": "#/components/schemas/JsonDeserializerObject1"
          },
          "_valueTypeDeserializer": {
            "$ref": "#/components/schemas/TypeDeserializer"
          },
          "_nullProvider": {
            "$ref": "#/components/schemas/NullValueProvider"
          },
          "_managedReferenceName": {
            "type": "string"
          },
          "_objectIdInfo": {
            "$ref": "#/components/schemas/ObjectIdInfo"
          },
          "_viewMatcher": {
            "$ref": "#/components/schemas/ViewMatcher"
          },
          "_propertyIndex": {
            "format": "int32",
            "type": "integer"
          },
          "managedReferenceName": {
            "type": "string"
          },
          "objectIdInfo": {
            "$ref": "#/components/schemas/ObjectIdInfo"
          },
          "views": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "ignorable": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "fullName": {
            "$ref": "#/components/schemas/PropertyName"
          },
          "type": {
            "$ref": "#/components/schemas/JavaType"
          },
          "wrapperName": {
            "$ref": "#/components/schemas/PropertyName"
          },
          "member": {
            "$ref": "#/components/schemas/AnnotatedMember"
          },
          "declaringClass": {
            "type": "object"
          },
          "valueDeserializer": {
            "$ref": "#/components/schemas/JsonDeserializerObject1"
          },
          "valueTypeDeserializer": {
            "$ref": "#/components/schemas/TypeDeserializer"
          },
          "nullValueProvider": {
            "$ref": "#/components/schemas/NullValueProvider"
          },
          "propertyIndex": {
            "format": "int32",
            "type": "integer"
          },
          "creatorIndex": {
            "format": "int32",
            "type": "integer"
          },
          "injectableValueId": {},
          "injectionOnly": {
            "type": "boolean"
          }
        }
      },
      "Shape": {
        "enum": [
          "ANY",
          "NATURAL",
          "SCALAR",
          "ARRAY",
          "OBJECT",
          "NUMBER",
          "NUMBER_FLOAT",
          "NUMBER_INT",
          "STRING",
          "BOOLEAN",
          "BINARY"
        ],
        "type": "string"
      },
      "ShortBuilder": {
        "type": "object",
        "properties": {
          "_freeBuffer": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "_bufferHead": {
            "$ref": "#/components/schemas/Node[S"
          },
          "_bufferTail": {
            "$ref": "#/components/schemas/Node[S"
          },
          "_bufferedEntryCount": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "SimpleMixInResolver": {
        "type": "object",
        "properties": {
          "_overrides": {
            "$ref": "#/components/schemas/MixInResolver"
          },
          "_localMixIns": {
            "type": "object",
            "additionalProperties": {}
          },
          "localDefinitions": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "SingleArgConstructor": {
        "enum": [
          "DELEGATING",
          "PROPERTIES",
          "HEURISTIC",
          "REQUIRE_MODE"
        ],
        "type": "string"
      },
      "Station": {
        "type": "object",
        "properties": {
          "station_code": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "format": "int64",
            "type": "integer"
          },
          "connection": {
            "$ref": "#/components/schemas/Connection"
          },
          "connection_mod4": {
            "$ref": "#/components/schemas/Connection"
          },
          "password": {
            "type": "string"
          },
          "redirect": {
            "$ref": "#/components/schemas/Redirect"
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          },
          "service_pof": {
            "$ref": "#/components/schemas/Service"
          },
          "service_mod4": {
            "$ref": "#/components/schemas/Service"
          },
          "broker_code": {
            "type": "string"
          },
          "proxy": {
            "$ref": "#/components/schemas/Proxy"
          },
          "thread_number": {
            "format": "int64",
            "type": "integer"
          },
          "timeouts": {
            "$ref": "#/components/schemas/Timeouts"
          },
          "invio_rt_istantaneo": {
            "type": "boolean"
          },
          "primitive_version": {
            "format": "int32",
            "type": "integer"
          },
          "flag_standin": {
            "type": "boolean"
          },
          "is_payment_options_enabled": {
            "type": "boolean"
          },
          "rest_endpoint": {
            "type": "string"
          }
        }
      },
      "StationCreditorInstitution": {
        "type": "object",
        "properties": {
          "creditor_institution_code": {
            "type": "string"
          },
          "station_code": {
            "type": "string"
          },
          "application_code": {
            "format": "int64",
            "type": "integer"
          },
          "aux_digit": {
            "format": "int64",
            "type": "integer"
          },
          "segregation_code": {
            "format": "int64",
            "type": "integer"
          },
          "mod4": {
            "type": "boolean"
          },
          "broadcast": {
            "type": "boolean"
          },
          "primitive_version": {
            "format": "int32",
            "type": "integer"
          },
          "spontaneous_payment": {
            "type": "boolean"
          }
        }
      },
      "StreamReadConstraints": {
        "type": "object",
        "properties": {
          "_maxNestingDepth": {
            "format": "int32",
            "type": "integer"
          },
          "_maxDocLen": {
            "format": "int64",
            "type": "integer"
          },
          "_maxNumLen": {
            "format": "int32",
            "type": "integer"
          },
          "_maxStringLen": {
            "format": "int32",
            "type": "integer"
          },
          "_maxNameLen": {
            "format": "int32",
            "type": "integer"
          },
          "maxNestingDepth": {
            "format": "int32",
            "type": "integer"
          },
          "maxDocumentLength": {
            "format": "int64",
            "type": "integer"
          },
          "maxNumberLength": {
            "format": "int32",
            "type": "integer"
          },
          "maxStringLength": {
            "format": "int32",
            "type": "integer"
          },
          "maxNameLength": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "StreamWriteConstraints": {
        "type": "object",
        "properties": {
          "_maxNestingDepth": {
            "format": "int32",
            "type": "integer"
          },
          "maxNestingDepth": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "SubtypeResolver": {
        "type": "object"
      },
      "Sync": {
        "type": "object",
        "properties": {
          "state": {
            "format": "int32",
            "type": "integer"
          },
          "firstQueuedThread": {
            "type": "object"
          },
          "queueLength": {
            "format": "int32",
            "type": "integer"
          },
          "queuedThreads": {
            "type": "array",
            "items": {}
          },
          "exclusiveQueuedThreads": {
            "type": "array",
            "items": {}
          },
          "sharedQueuedThreads": {
            "type": "array",
            "items": {}
          },
          "heldExclusively": {
            "type": "boolean"
          },
          "owner": {
            "type": "object"
          },
          "holdCount": {
            "format": "int32",
            "type": "integer"
          },
          "locked": {
            "type": "boolean"
          }
        }
      },
      "TemporalField": {
        "type": "object",
        "properties": {
          "baseUnit": {
            "$ref": "#/components/schemas/TemporalUnit"
          },
          "rangeUnit": {
            "$ref": "#/components/schemas/TemporalUnit"
          },
          "dateBased": {
            "type": "boolean"
          },
          "timeBased": {
            "type": "boolean"
          }
        }
      },
      "TemporalUnit": {
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "durationEstimated": {
            "type": "boolean"
          },
          "dateBased": {
            "type": "boolean"
          },
          "timeBased": {
            "type": "boolean"
          }
        }
      },
      "TimeDefinition": {
        "enum": [
          "UTC",
          "WALL",
          "STANDARD"
        ],
        "type": "string"
      },
      "TimeZone": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "string"
          },
          "rawOffset": {
            "format": "int32",
            "type": "integer"
          },
          "iD": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "dSTSavings": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "Timeouts": {
        "type": "object",
        "properties": {
          "timeout_a": {
            "format": "int64",
            "type": "integer"
          },
          "timeout_b": {
            "format": "int64",
            "type": "integer"
          },
          "timeout_c": {
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "TypeBindings": {
        "type": "object",
        "properties": {
          "_names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JavaType"
            }
          },
          "_unboundVariables": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_hashCode": {
            "format": "int32",
            "type": "integer"
          },
          "empty": {
            "type": "boolean"
          },
          "typeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JavaType"
            }
          }
        }
      },
      "TypeDeserializer": {
        "type": "object",
        "properties": {
          "typeInclusion": {
            "$ref": "#/components/schemas/As"
          },
          "propertyName": {
            "type": "string"
          },
          "typeIdResolver": {
            "$ref": "#/components/schemas/TypeIdResolver"
          },
          "defaultImpl": {
            "type": "object"
          }
        }
      },
      "TypeFactory": {
        "type": "object",
        "properties": {
          "_typeCache": {
            "$ref": "#/components/schemas/LookupCacheObjectJavaType"
          },
          "_modifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeModifier"
            }
          },
          "_parser": {
            "$ref": "#/components/schemas/TypeParser"
          },
          "_classLoader": {
            "type": "object"
          },
          "classLoader": {
            "type": "object"
          }
        }
      },
      "TypeIdResolver": {
        "type": "object",
        "properties": {
          "descForKnownTypeIds": {
            "type": "string"
          },
          "mechanism": {
            "$ref": "#/components/schemas/Id"
          }
        }
      },
      "TypeModifier": {
        "type": "object"
      },
      "TypeParser": {
        "type": "object",
        "properties": {
          "_factory": {
            "$ref": "#/components/schemas/TypeFactory"
          }
        }
      },
      "TypeResolutionContext": {
        "type": "object"
      },
      "TypeResolverBuilderObject": {
        "type": "object",
        "properties": {
          "defaultImpl": {
            "type": "object"
          }
        }
      },
      "Value": {
        "type": "object",
        "properties": {
          "_valueInclusion": {
            "$ref": "#/components/schemas/Include"
          },
          "_contentInclusion": {
            "$ref": "#/components/schemas/Include"
          },
          "_valueFilter": {
            "type": "object"
          },
          "_contentFilter": {
            "type": "object"
          },
          "valueInclusion": {
            "$ref": "#/components/schemas/Include"
          },
          "contentInclusion": {
            "$ref": "#/components/schemas/Include"
          },
          "valueFilter": {
            "type": "object"
          },
          "contentFilter": {
            "type": "object"
          }
        }
      },
      "Value1": {
        "type": "object",
        "properties": {
          "_nulls": {
            "$ref": "#/components/schemas/Nulls"
          },
          "_contentNulls": {
            "$ref": "#/components/schemas/Nulls"
          },
          "valueNulls": {
            "$ref": "#/components/schemas/Nulls"
          },
          "contentNulls": {
            "$ref": "#/components/schemas/Nulls"
          }
        }
      },
      "Value2": {
        "type": "object",
        "properties": {
          "_pattern": {
            "type": "string"
          },
          "_shape": {
            "$ref": "#/components/schemas/Shape"
          },
          "_locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "_timezoneStr": {
            "type": "string"
          },
          "_lenient": {
            "type": "boolean"
          },
          "_features": {
            "$ref": "#/components/schemas/Features"
          },
          "pattern": {
            "type": "string"
          },
          "shape": {
            "$ref": "#/components/schemas/Shape"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "lenient": {
            "type": "boolean"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "features": {
            "$ref": "#/components/schemas/Features"
          }
        }
      },
      "Value3": {
        "type": "object",
        "properties": {
          "_ignored": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_ignoreUnknown": {
            "type": "boolean"
          },
          "_allowGetters": {
            "type": "boolean"
          },
          "_allowSetters": {
            "type": "boolean"
          },
          "_merge": {
            "type": "boolean"
          },
          "ignored": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ignoreUnknown": {
            "type": "boolean"
          },
          "allowGetters": {
            "type": "boolean"
          },
          "allowSetters": {
            "type": "boolean"
          },
          "merge": {
            "type": "boolean"
          }
        }
      },
      "Value4": {
        "type": "object",
        "properties": {
          "_fieldVisibility": {
            "$ref": "#/components/schemas/Visibility"
          },
          "_getterVisibility": {
            "$ref": "#/components/schemas/Visibility"
          },
          "_isGetterVisibility": {
            "$ref": "#/components/schemas/Visibility"
          },
          "_setterVisibility": {
            "$ref": "#/components/schemas/Visibility"
          },
          "_creatorVisibility": {
            "$ref": "#/components/schemas/Visibility"
          },
          "fieldVisibility": {
            "$ref": "#/components/schemas/Visibility"
          },
          "getterVisibility": {
            "$ref": "#/components/schemas/Visibility"
          },
          "isGetterVisibility": {
            "$ref": "#/components/schemas/Visibility"
          },
          "setterVisibility": {
            "$ref": "#/components/schemas/Visibility"
          },
          "creatorVisibility": {
            "$ref": "#/components/schemas/Visibility"
          }
        }
      },
      "ViewMatcher": {
        "type": "object"
      },
      "Visibility": {
        "enum": [
          "ANY",
          "NON_PRIVATE",
          "PROTECTED_AND_PUBLIC",
          "PUBLIC_ONLY",
          "NONE",
          "DEFAULT"
        ],
        "type": "string"
      },
      "VisibilityCheckerObject": {
        "type": "object"
      },
      "ZoneId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "rules": {
            "$ref": "#/components/schemas/ZoneRules"
          }
        }
      },
      "ZoneOffset": {
        "type": "object",
        "properties": {
          "totalSeconds": {
            "format": "int32",
            "type": "integer"
          },
          "rules": {
            "$ref": "#/components/schemas/ZoneRules"
          }
        }
      },
      "ZoneOffsetTransition": {
        "type": "object",
        "properties": {
          "epochSecond": {
            "format": "int64",
            "type": "integer"
          },
          "transition": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "offsetBefore": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "offsetAfter": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "instant": {
            "$ref": "#/components/schemas/Instant"
          },
          "dateTimeBefore": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "dateTimeAfter": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "durationSeconds": {
            "format": "int32",
            "type": "integer"
          },
          "gap": {
            "type": "boolean"
          },
          "overlap": {
            "type": "boolean"
          },
          "validOffsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffset"
            }
          }
        }
      },
      "ZoneOffsetTransitionRule": {
        "type": "object",
        "properties": {
          "month": {
            "$ref": "#/components/schemas/Month"
          },
          "dom": {
            "format": "byte",
            "type": "string"
          },
          "dow": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "time": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "timeEndOfDay": {
            "type": "boolean"
          },
          "timeDefinition": {
            "$ref": "#/components/schemas/TimeDefinition"
          },
          "standardOffset": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "offsetBefore": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "offsetAfter": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "dayOfMonthIndicator": {
            "format": "int32",
            "type": "integer"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "localTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "midnightEndOfDay": {
            "type": "boolean"
          }
        }
      },
      "ZoneRules": {
        "type": "object",
        "properties": {
          "standardTransitions": {
            "type": "array",
            "items": {
              "format": "int64",
              "type": "integer"
            }
          },
          "standardOffsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffset"
            }
          },
          "savingsInstantTransitions": {
            "type": "array",
            "items": {
              "format": "int64",
              "type": "integer"
            }
          },
          "savingsLocalTransitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalDateTime"
            }
          },
          "wallOffsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffset"
            }
          },
          "lastRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffsetTransitionRule"
            }
          },
          "fixedOffset": {
            "type": "boolean"
          },
          "transitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffsetTransition"
            }
          },
          "transitionRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffsetTransitionRule"
            }
          }
        }
      }
    },
    "responses": {
      "ErrorResponse400": {
        "description": "Default app exception for status 400",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "ErrorResponse404": {
        "description": "Default app exception for status 404",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "ErrorResponse500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "name": "Ocp-Apim-Subscription-Key",
        "in": "header"
      }
    }
  }
}
