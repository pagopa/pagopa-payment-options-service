###################
## CUSTOM
###################
quarkus.application.environment=${ENV:local}
quarkus.application.title=${APP_TITLE:PagoPa Payment Options}
quarkus.application.name=${APP_TITLE:PagoPa Payment Options Service}

###################
## COMMON OVERRIDE
###################
quarkus.default-locale=it-IT
quarkus.locales=it-IT
quarkus.native.additional-build-args=-H:ResourceConfigurationFiles=resources-config.json

###################
## LOG
###################

quarkus.log.json.log-format=ecs

quarkus.log.level=${LOG_LEVEL:INFO}
quarkus.log.category."org.jboss".level=${JBOSS_LOG_LEVEL:INFO}
quarkus.log.category."it.gov.pagopa.payment.options".level=${APP_LOG_LEVEL:INFO}
%dev.quarkus.log.console.json=false
%test.quarkus.log.console.json=false

quarkus.log.console.json.additional-field."app_name".value=${quarkus.application.name}
quarkus.log.console.json.additional-field."app_version".value=${quarkus.application.version}
quarkus.log.console.json.additional-field."app_environment".value=${quarkus.application.environment}

###################
## KAFKA
###################

kafka.bootstrap.servers=${KAFKA_HOST:localhost:9093}

mp.messaging.incoming.nodo-dei-pagamenti-cache.bootstrap.servers=${CACHE_EVT_HOST:localhost:9093}
mp.messaging.incoming.nodo-dei-pagamenti-cache.topic=${CACHE_EVT_TOPIC:nodo-dei-pagamenti-cache}
mp.messaging.incoming.nodo-dei-pagamenti-cache.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.incoming.nodo-dei-pagamenti-cache.offset.reset=latest
mp.messaging.incoming.nodo-dei-pagamenti-cache.group.id=${quarkus.uuid}
mp.messaging.incoming.nodo-dei-pagamenti-cache.security.protocol=${KAFKA_CONFIG_SECURITY_PROTOCOL:SASL_SSL}
%test.mp.messaging.incoming.nodo-dei-pagamenti-cache.security.protocol=${KAFKA_CONFIG_SECURITY_PROTOCOL:PLAINTEXT}
mp.messaging.incoming.nodo-dei-pagamenti-cache.sasl.mechanism=${KAFKA_CONFIG_SASL_MECHANISM:PLAIN}
%test.mp.messaging.incoming.nodo-dei-pagamenti-cache.sasl.mechanism=${KAFKA_CONFIG_SASL_MECHANISM:}
mp.messaging.incoming.nodo-dei-pagamenti-cache.sasl.jaas.config=${KAFKA_EH_CACHE_JAAS_CONFIG:}
%test.mp.messaging.incoming.nodo-dei-pagamenti-cache.sasl.jaas.config=${KAFKA_EH_CACHE_JAAS_CONFIG:test}
mp.messaging.incoming.nodo-dei-pagamenti-cache.session.timeout.ms=${KAFKA_CONFIG_SESSION_TIMEOUT_MS:60000}
mp.messaging.incoming.nodo-dei-pagamenti-cache.request.timeout.ms=${KAFKA_CONFIG_REQUEST_TIMEOUT_MS:60000}
mp.messaging.incoming.nodo-dei-pagamenti-cache.connections.max.idle.ms=${KAFKA_CONFIG_CONNECTION_MAX_IDLE_TIME:180000}
mp.messaging.incoming.nodo-dei-pagamenti-cache.metadata.max.idle.ms=${KAFKA_CONFIG_METADATA_MAX_IDLE_MS:180000}
mp.messaging.incoming.nodo-dei-pagamenti-cache.metadata.max.age.ms=${KAFKA_CONFIG_METADATA_MAX_AGE_INTERVAL:179000}
mp.messaging.incoming.nodo-dei-pagamenti-cache.connections.max.request.size=${KAFKA_CONFIG_METADATA_MAX_REQUEST_SIZE:1000000}

mp.messaging.outgoing.nodo-dei-pagamenti-verify-ko.bootstrap.servers=${VERIFY_KO_EVT_HOST:localhost:9093}
mp.messaging.outgoing.nodo-dei-pagamenti-verify-ko.topic=${VERIFY_KO_EVT_TOPIC:nodo-dei-pagamenti-cache}
mp.messaging.outgoing.nodo-dei-pagamenti-verify-ko.security.protocol=${KAFKA_CONFIG_SECURITY_PROTOCOL:SASL_SSL}
%test.mp.messaging.outgoing.nodo-dei-pagamenti-verify-ko.security.protocol=${KAFKA_CONFIG_SECURITY_PROTOCOL:PLAINTEXT}
mp.messaging.outgoing.nodo-dei-pagamenti-verify-ko.sasl.mechanism=${KAFKA_CONFIG_SASL_MECHANISM:PLAIN}
%test.mp.messaging.outgoing.nodo-dei-pagamenti-verify-ko.sasl.mechanism=${KAFKA_CONFIG_SASL_MECHANISM:}
mp.messaging.outgoing.nodo-dei-pagamenti-verify-ko.sasl.jaas.config=${KAFKA_VERIFY_KO_JAAS_CONFIG:}
%test.mp.messaging.outgoing.nodo-dei-pagamenti-verify-ko.sasl.jaas.config=${KAFKA_EH_VERIFY_KO_JAAS_CONFIG:test}

mp.messaging.outgoing.opzioni-di-pagamento-re.bootstrap.servers=${VERIFY_RE_EVT_HOST:localhost:9093}
mp.messaging.outgoing.opzioni-di-pagamento-re.topic=${VERIFY_RE_EVT_TOPIC:opzioni-di-pagamento-re}
mp.messaging.outgoing.opzioni-di-pagamento-re.security.protocol=${KAFKA_CONFIG_SECURITY_PROTOCOL:SASL_SSL}
%test.mp.messaging.outgoing.opzioni-di-pagamento-re.security.protocol=${KAFKA_CONFIG_SECURITY_PROTOCOL:PLAINTEXT}
mp.messaging.outgoing.opzioni-di-pagamento-re.sasl.mechanism=${KAFKA_CONFIG_SASL_MECHANISM:PLAIN}
%test.mp.messaging.outgoing.opzioni-di-pagamento-re.sasl.mechanism=${KAFKA_CONFIG_SASL_MECHANISM:}
mp.messaging.outgoing.opzioni-di-pagamento-re.sasl.jaas.config=${KAFKA_EH_RE_JAAS_CONFIG:}
%test.mp.messaging.outgoing.opzioni-di-pagamento-re.sasl.jaas.config=${KAFKA_EH_RE_JAAS_CONFIG:test}

###################
## CONFIG CACHE REST CLIENT
###################

quarkus.rest-client."it.gov.pagopa.payment.options.clients.ApiConfigCacheClient".url=${APICONFIG_CACHE_URL:localhost:8082}
ApiConfigCacheClient.ocpSubKey=${APICONFIG_SUBKEY:}

###################
## EC REST CLIENT
###################

CreditorInstitutionRestClient.ocpSubKey=${EC_APIM_SUBKEY:}
CreditorInstitutionRestClient.apimEndpoint=${EC_APIM_FORWARDER_ENDPOINT:localhost:8083}

###################
## OPENTELEMETRY
###################
quarkus.opentelemetry.enabled=true
%dev.quarkus.opentelemetry.enabled=false
%test.quarkus.opentelemetry.enabled=false
%openapi.quarkus.opentelemetry.enabled=false
quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://otel-collector.elastic-system.svc.cluster.local:4317
quarkus.opentelemetry.tracer.exporter.otlp.headers=Authorization=Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjA0VlBnYVNzNGVsdDExY21KLXNZc2FFS1k5ZW4wb3htRklHNUR2UW10Z1UifQ
%dev.quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://localhost:4317
%dev.quarkus.opentelemetry.tracer.exporter.otlp.headers=Authorization=Bearer my-token
%test.quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://localhost:4317
%test.quarkus.opentelemetry.tracer.exporter.otlp.headers=Authorization=Bearer my-token
%docker.quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://otel-collector:4317
%docker.quarkus.opentelemetry.tracer.exporter.otlp.headers=Authorization=Bearer my-token
#quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{3.}] (%t) %s%e%n

####################
## OPENAPI - SWAGGER
####################
quarkus.smallrye-openapi.info-title=${quarkus.application.title} (${quarkus.application.environment}) ${service}
%dev.quarkus.smallrye-openapi.info-title=${quarkus.application.title} (DEV)
%test.quarkus.smallrye-openapi.info-title=${quarkus.application.title}
%docker.quarkus.smallrye-openapi.info-title=${quarkus.application.title} (DOCKER)
quarkus.smallrye-openapi.info-version=${quarkus.application.version}
quarkus.smallrye-openapi.info-terms-of-service=https://www.pagopa.gov.it/
# TODO modify project
# Path for the Swagger endpoint and file
quarkus.swagger-ui.path=/swagger
quarkus.smallrye-openapi.path=/openapi.json





